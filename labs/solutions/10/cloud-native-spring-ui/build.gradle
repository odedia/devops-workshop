plugins {
    id 'com.gorylenko.gradle-git-properties' version '2.0.0'
    id 'org.springframework.boot' version '2.0.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    id 'java'
    id 'com.devsoap.vaadin-flow' version '1.1.1'
}

gitProperties {
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "UTC"
    dotGitDirectory = "${project.rootDir}/../../../.."
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.SR3"
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:2.0.3.RELEASE"
    }
}

dependencies {
    implementation('org.glassfish.jaxb:jaxb-runtime:2.4.0-b180830.0438')
    if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
        implementation('org.javassist:javassist:3.23.0-GA')
    } else {
        implementation('org.javassist:javassist:3.22.0-GA')
    }
    annotationProcessor('org.projectlombok:lombok:1.18.6')
    implementation('org.projectlombok:lombok:1.18.6')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-hateoas')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry')
    implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
    implementation('io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker')
    implementation('org.hibernate:hibernate-core:5.4.1.Final')
    implementation vaadin.bom()
    implementation vaadin.platform()
    implementation vaadin.lumoTheme()
    implementation('com.vaadin:vaadin-spring-boot-starter')
    implementation('org.vaadin.crudui:crudui:3.8.1')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

repositories {
    maven { url "https://repo.spring.io/plugins-release" }
    vaadin.repositories()
    mavenCentral()
}

bootRun {
    // support passing -Dsystem.property=value to bootRun task
    systemProperties = System.properties
}

tasks.withType(Test) {
    if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
        jvmArgs += ["--add-opens", "java.base/java.lang=ALL-UNNAMED"]
    }
}